# CAMBIATE LE MAIUSCOLE M di Maria in minuscole m in maria
version: '3.8'
services:
  mariadb:
    image: mariadb:11.7.2-ubi9
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: userdb
      MARIADB_DATABASE: user_db
      MARIADB_USER: appuser
      MARIADB_PASSWORD: userdb
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "no"
      MARIADB_RANDOM_ROOT_PASSWORD: "no"
    ports:
      - "3307:3306" # CAMBIATA PORTA DELLA MACCHINA IN 3307
    volumes:
      - mariadb_data:/var/lib/mysql 
      - ./mariadb/init_db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "appuser", "-puserdb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  popola_db:
    build: ./script
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - ./script:/app
    working_dir: /app
    environment:
      PYTHONUNBUFFERED: 1
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_USER: appuser
      DB_PASSWORD: userdb
      DB_NAME: user_db
    command: ["python", "popola_db.py"]
    restart: "no"

  ollama_service:
    image: ollama/ollama
    container_name: ollama_service
    ports:
      - "11435:11434"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ollama:/root/.ollama
    entrypoint: /bin/sh
    command: ["-c", "ollama serve & sleep 5 && ollama pull gemma3:4b && tail -f /dev/null"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  backend_service:
    build: ./backend
    container_name: backend_name
    environment:
      - PYTHONPATH=/app/src
    working_dir: /app/src/backend
    command: ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    depends_on:
      mariadb:
        condition: service_healthy
      ollama_service:
        condition: service_started

  frontend_service:
    build: ./frontend
    container_name: frontend_name
    environment:
      - PYTHONPATH=/app/src
    working_dir: /app/src/frontend
    command: ["uvicorn", "frontend:app", "--host", "0.0.0.0", "--port", "8001"]
    ports:
      - "8001:8001"
    depends_on:
      - backend_service


# uso di celery per invio mail differite

# qui il container per server redis e per debugger grafico e gestore rediscommander

  redis:
    image: redis
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
 
# qui il container per il worker, chi consuma i risultati storati o chi effettivamente fa partire i task

  celery_worker:
    build: ./backend
    container_name: celery_worker
    # --pool=solo limita la cpu, ma Ã¨ consigliato per debugging; per sistemi multiprocessing togliere l'opzione, lasciare a default 
    command: >
      sh -c "celery -A backend.ranking.tasks worker --loglevel=info --pool=solo" 
    working_dir: /app/src/backend
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - redis
      - backend_service





volumes:
  mariadb_data:
  ollama: